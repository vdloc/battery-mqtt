name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [22.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Build client
        run: npm run build:client

      - name: Build server
        run: npm run build:server

      - name: Build Drizzle package
        run: npm run build:drizzle

      - name: Build Zod package
        run: npm run build:zod

      - name: Run end-to-end tests
        run: npm run test:e2e

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Deploy to Server
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_CONNECTION: ${{ secrets.SSH_CONNECTION }}
        run: |
          echo "$SSH_KEY"> key.pem
          chmod 600 key.pem
          scp -i key.pem -r ./frontend/dist $USER@$HOST:/var/www/battery-mqtt/frontend
          scp -i key.pem -r ./backend/dist $USER@$HOST:/var/www/battery-mqtt/backend/dist
          ssh -i key.pem $SSH_CONNECTION "cd /var/www/battery-mqtt && npm install && npm run build && pm2 restart battery-mqtt"
